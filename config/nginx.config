server {
  listen <%= ENV["PORT"] %>;
  charset UTF-8;
  port_in_redirect off;
  keepalive_timeout 5;
  # NOTE: The root needs to be the same root that was used in the static.json file used previously
  root dist;

  # NOTE:  I commented this out; @senolatac has it in theirs.
  #resolver 10.1.0.2 8.8.8.8;

  # Allow payloads of up to 10mb
  client_max_body_size 10M;

  # Redirect all non-https traffic to https
  if ($http_x_forwarded_proto != "https") {
    return 301 https://$host$request_uri;
  }

  location = /index.html {
    add_header Cache-Control "no-store, no-cache";
    add_header Strict-Transport-Security "max-age=31536002;";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src * 'unsafe-inline' 'unsafe-eval'; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline';";

    try_files $uri $uri/ =404;
  }

  location / {
    add_header 'Cache-Control' "public, max-age=3600";

    try_files $uri $uri/ /index.html;
  }

  location /manifest.json {
    add_header Cache-Control "no-store, no-cache";
    add_header Access-Control-Allow-Origin "*";

    try_files $uri $uri/ =404;
  }

  # Cache assets for a long time, since all of them get unique names on each build
  location ~ ^/assets/[^/]*$ {
    add_header Cache-Control "public, max-age=31536000";
    add_header Access-Control-Allow-Origin "*";

    try_files $uri $uri/ =404;
  }


  # Need this b/c setting $fallback to =404 will try #{root}=404 instead of returning a 404
  location @404 {
    return 404;
  }
}